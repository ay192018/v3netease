{"remainingRequest":"D:\\HTML工程\\项目\\v3netease-main\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\HTML工程\\项目\\v3netease-main\\src\\App.vue?vue&type=style&index=0&id=7ba5bd90&lang=less&scoped=true","dependencies":[{"path":"D:\\HTML工程\\项目\\v3netease-main\\src\\App.vue","mtime":1648306051917},{"path":"D:\\HTML工程\\项目\\v3netease-main\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\dist\\cjs.js","mtime":1636397467718},{"path":"D:\\HTML工程\\项目\\v3netease-main\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1643212638233},{"path":"D:\\HTML工程\\项目\\v3netease-main\\node_modules\\@vue\\cli-service\\node_modules\\postcss-loader\\src\\index.js","mtime":1636397468036},{"path":"D:\\HTML工程\\项目\\v3netease-main\\node_modules\\less-loader\\dist\\cjs.js","mtime":1636397475650},{"path":"D:\\HTML工程\\项目\\v3netease-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636397451353},{"path":"D:\\HTML工程\\项目\\v3netease-main\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1643212638233}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50ZW1wIHsKICBib3R0b206IDA7Cn0K"},{"version":3,"sources":["D:\\HTML工程\\项目\\v3netease-main\\src\\App.vue"],"names":[],"mappings":";AA+EA,CAAC,CAAC,CAAC,CAAC,EAAE;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACX","file":"D:/HTML工程/项目/v3netease-main/src/App.vue","sourceRoot":"","sourcesContent":["<script>\nimport Layout from './views/layout/';\nimport Audio from '@/components/audio/';\nimport { nextTick, watch } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useWindowSize } from '@vant/use';\nimport { Toast } from 'vant';\nimport { changeaudio, initaudio, debounce } from '@/Util/fltter.js';\nimport { useStore } from 'vuex';\nexport default {\n  components: { Audio, Layout },\n  name: 'App',\n  setup() {\n    const route = useRoute();\n\n    const store = useStore();\n    const { width } = useWindowSize();\n    const fail = () => {\n      Toast.fail('请切换手机模式浏览！！！');\n    };\n\n    watch(\n      () => width.value,\n      (val) => {\n        if (val > 500) {\n          debounce(fail, 500);\n        }\n      },\n      {\n        immediate: true,\n      },\n    );\n    watch(route, (val) => {\n      if (store.state.isplay) {\n        if ((val.path.at(1) === 'v' && val.path.at(5) === 'o') || val.path === '/login') {\n          store.dispatch('setisplay', !store.state.isplay);\n          store.state.audio.pause();\n        }\n      }\n\n      switch (val.path) {\n        case '/':\n          nextTick(() => {\n            changeaudio();\n          });\n          break;\n        case '/login':\n          break;\n\n        case '/my':\n          nextTick(() => {\n            changeaudio();\n          });\n\n          break;\n        case '/follow':\n          changeaudio();\n\n          break;\n        case '/Videosquare':\n          changeaudio();\n\n          break;\n\n        default:\n          nextTick(() => {\n            initaudio();\n          });\n      }\n    });\n    return {\n      route,\n      store,\n      width,\n    };\n  },\n};\n</script>\n<style lang=\"less\" scoped>\n.temp {\n  bottom: 0;\n}\n</style>\n<template>\n  <router-view v-slot=\"{ Component }\">\n    <transition name=\"slide-fade\">\n      <keep-alive v-if=\"route.meta.keepAlive\" :max=\"5\" include=\"\">\n        <component class=\"child-view\" :is=\"Component\"> </component>\n      </keep-alive>\n\n      <component v-else class=\"child-view\" :is=\"Component\"> </component>\n    </transition>\n    <keep-alive v-if=\"route.path !== '/login'\">\n      <component is=\"Audio\"> </component>\n    </keep-alive>\n  </router-view>\n</template>\n"]}]}
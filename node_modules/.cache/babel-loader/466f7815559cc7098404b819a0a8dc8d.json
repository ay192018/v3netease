{"remainingRequest":"D:\\HTML工程\\项目\\v3netease-main\\node_modules\\thread-loader\\dist\\cjs.js!D:\\HTML工程\\项目\\v3netease-main\\node_modules\\babel-loader\\lib\\index.js!D:\\HTML工程\\项目\\v3netease-main\\src\\Util\\fltter.js","dependencies":[{"path":"D:\\HTML工程\\项目\\v3netease-main\\src\\Util\\fltter.js","mtime":1644489442773},{"path":"D:\\HTML工程\\项目\\v3netease-main\\babel.config.js","mtime":1643989866000},{"path":"D:\\HTML工程\\项目\\v3netease-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636397451353},{"path":"D:\\HTML工程\\项目\\v3netease-main\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1636397451359},{"path":"D:\\HTML工程\\项目\\v3netease-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1636614324825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90eXBlb2YgZnJvbSAiRDpcXEhUTUxcdTVERTVcdTdBMEJcXFx1OTg3OVx1NzZFRVxcdjNuZXRlYXNlLW1haW5cXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lXFxoZWxwZXJzXFxlc21cXHR5cGVvZi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CgovKioKICoKICoKICogQHBhcmFtIHtOdW1iZXJ9IOS8oOWFpeS4gOS4quaVsOaNrgogKiBAcmV0dXJuIHtOdW1iZXJ9CiAqIEBhdXRob3IgQXl5eXkgPDE3MzgyMDIyOThAcXEuY29tPgogKgogKi8KZXhwb3J0IHZhciBwbGF5Q291bnQgPSBmdW5jdGlvbiBwbGF5Q291bnQobnVtKSB7CiAgaWYgKG51bSA+IDEwMDAwMDAwMCkgewogICAgbnVtID0gKG51bSAvIDEwMDAwMDAwMCkudG9GaXhlZCgyKTsKICAgIHJldHVybiAiIi5jb25jYXQobnVtLCAiXHU0RUJGIik7CiAgfSBlbHNlIGlmIChudW0gPiAxMDAwMCkgewogICAgbnVtID0gKG51bSAvIDEwMDAwKS50b0ZpeGVkKDIpOwogICAgcmV0dXJuICIiLmNvbmNhdChudW0sICIgXHU0RTA3Iik7CiAgfSBlbHNlIHsKICAgIHJldHVybiBudW07CiAgfQp9OwpleHBvcnQgdmFyIGpvYkNvdW50ID0gZnVuY3Rpb24gam9iQ291bnQobnVtKSB7CiAgaWYgKG51bSA+IDEwMDApIHsKICAgIG51bSA9IChudW0gLyAxMDAwKS50b0ZpeGVkKDEpOwogICAgcmV0dXJuICIiLmNvbmNhdChudW0sICJrIik7CiAgfSBlbHNlIHsKICAgIHJldHVybiBudW07CiAgfQp9OwovKioKICogQHBhcmFtIHtudW1iZXJ9IHNlY29uZAogKiBAcmV0dXJuIHtTdHJpbmd96L+U5Zue5LiA5Liq5pe26Ze05a2X56ym5LiyCiAqIEBhdXRob3IgQXl5eXkgPDE3MzgyMDIyOThAcXEuY29tPgogKi8KCmV4cG9ydCB2YXIgcmVhbEZvcm1hdFNlY29uZCA9IGZ1bmN0aW9uIHJlYWxGb3JtYXRTZWNvbmQoc2Vjb25kKSB7CiAgdmFyIHNlY29uZFR5cGUgPSBfdHlwZW9mKHNlY29uZCk7CgogIGlmIChzZWNvbmRUeXBlID09PSAibnVtYmVyIiB8fCBzZWNvbmRUeXBlID09PSAic3RyaW5nIikgewogICAgc2Vjb25kID0gcGFyc2VJbnQoc2Vjb25kKTsKICAgIHZhciBob3VycyA9IE1hdGguZmxvb3Ioc2Vjb25kIC8gMzYwMCk7CiAgICBzZWNvbmQgPSBzZWNvbmQgLSBob3VycyAqIDM2MDA7CiAgICB2YXIgbWltdXRlID0gTWF0aC5mbG9vcihzZWNvbmQgLyA2MCk7CiAgICBzZWNvbmQgPSBzZWNvbmQgLSBtaW11dGUgKiA2MDsKICAgIHJldHVybiAiIi5jb25jYXQoKCIwIiArIG1pbXV0ZSkuc2xpY2UoLTIpLCAiOiIpLmNvbmNhdCgoIjAiICsgc2Vjb25kKS5zbGljZSgtMikpOwogIH0gZWxzZSB7CiAgICByZXR1cm4gIjAwOjAwIjsKICB9Cn07Ci8qKgogKiBAcGFyYW0gey4uLm51bWJlcn0gU3RhcnRlbmQsCiAqIEByZXR1cm4ge251bWJlcn3ov5Tlm57kuIDkuKrpmo/mnLrmlbAKICogQGF1dGhvciBBeXl5eSA8MTczODIwMjI5OEBxcS5jb20+CiAqLwoKZXhwb3J0IHZhciByYW5kb20gPSBmdW5jdGlvbiByYW5kb20oU3RhcnQsIGVuZCkgewogIHZhciBudW0gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoU3RhcnQgLSBlbmQpICsgZW5kKTsKICByZXR1cm4gbnVtOwp9OwovKioKICogQHBhcmFtICB7RnVuY3Rpb259IOimgemYsuaKlueahOWHveaVsAogKiBAcGFyYW0gIHtOdW1iZXJ9IOW7tui/n+WkmuenkuaJp+ihjAogKi8KCmV4cG9ydCB2YXIgZGVib3VuY2UgPSBmdW5jdGlvbiBkZWJvdW5jZShmbiwgZGVsYXkpIHsKICB2YXIgdGltZXI7CiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7CiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgICB9CgogICAgaWYgKHRpbWVyKSB7CiAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7CiAgICB9CgogICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgZm4uYXBwbHkoX3RoaXMsIGFyZ3MpOwogICAgfSwgZGVsYXkpOwogIH07Cn07Ci8qKgogKiBAcGFyYW0gIHsqfSDnm5HlkKzot6/nlLHmlLnlj5hhdWRpb+eahOS9jee9rgogKgogKi8KCmV4cG9ydCB2YXIgY2hhbmdlYXVkaW8gPSBmdW5jdGlvbiBjaGFuZ2VhdWRpbygpIHsKICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuYXVkaW8iKS5zdHlsZS5ib3R0b20gPSAiNTBweCI7Cn07CmV4cG9ydCB2YXIgaW5pdGF1ZGlvID0gZnVuY3Rpb24gaW5pdGF1ZGlvKCkgewogIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5hdWRpbyIpLnN0eWxlLmJvdHRvbSA9IDA7Cn07Ci8qKgogKiBAcGFyYW0gIHtPYmplY3R9IOS8oOWFpeivt+axgueahOatjOabsuWvueixoeaVsOaNrui/m+ihjOaKveemuwogKiBAcmV0dXJuICB7T2JqZWN0fSDlu7bov5/lpJrnp5LmiafooYwKICovCgpleHBvcnQgdmFyIGx5cmljcyA9IGZ1bmN0aW9uIGx5cmljcyhseXJpYykgewogIHZhciBseXJpY3MgPSBseXJpYy5scmMubHlyaWM7CiAgdmFyIGFyciA9IGx5cmljcy5zcGxpdCgiXG4iKTsKICB2YXIgYXJyYXkgPSBbXTsKICB2YXIgdGltZSA9ICIiOwogIHZhciB2YWx1ZSA9ICIiOwogIHZhciByZXN1bHQgPSBbXTsKICB2YXIga2V5ID0gW107CiAgYXJyLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgIGlmIChpdGVtICE9ICIiKSB7CiAgICAgIGFycmF5LnB1c2goaXRlbSk7CiAgICB9CiAgfSk7CiAgYXJyID0gYXJyYXk7CiAgYXJyLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgIHRpbWUgPSBpdGVtLnNwbGl0KCJdIilbMF07CiAgICB2YWx1ZSA9IGl0ZW0uc3BsaXQoIl0iKVsxXTsKICAgIHZhciB0ID0gdGltZS5zbGljZSgxKS5zcGxpdCgiOiIpOwogICAgcmVzdWx0LnB1c2goW3BhcnNlSW50KHRbMF0sIDEwKSAqIDYwICsgcGFyc2VGbG9hdCh0WzFdKSwgdmFsdWVdKTsKICAgIGtleS5wdXNoKHBhcnNlSW50KHRbMF0sIDEwKSAqIDYwICsgcGFyc2VGbG9hdCh0WzFdKSk7CiAgfSk7CiAgcmV0dXJuIHsKICAgIHJlc3VsdDogcmVzdWx0LAogICAga2V5OiBrZXkKICB9Owp9OwovKioKICogQHBhcmFtICB7U3RyaW5nfSDkvKDlhaXkuIDkuKrlrZfnrKbliKTmlq3opoHor7fmsYLpgqPkuKrmjqXlj6MKICogQHJldHVybiAge1N0cmluZ30g6L+U5Zue5LiA5Liq5o6l5Y+j5Zyw5Z2A5a2X56ym5LiyCiAqLwoKZXhwb3J0IHZhciB0b2NvbW1udHMgPSBmdW5jdGlvbiB0b2NvbW1udHModmFsKSB7CiAgaWYgKHZhbCA9PT0gMCkgewogICAgcmV0dXJuICIvY29tbWVudC9tdXNpYyI7CiAgfSBlbHNlIGlmICh2YWwgPT09IDIpIHsKICAgIHJldHVybiAiL2NvbW1lbnQvcGxheWxpc3QiOwogIH0gZWxzZSBpZiAodmFsID09PSA1KSB7CiAgICByZXR1cm4gIi9jb21tZW50L3ZpZGVvIjsKICB9IC8vIHN3aXRjaCAodmFsKSB7CiAgLy8gICBjYXNlIDA6CiAgLy8gICAgICIvY29tbWVudC9tdXNpYyI7CiAgLy8gICAgIGJyZWFrOwogIC8vICAgY2FzZSAyOgogIC8vICAgICByZXR1cm4gIi9jb21tZW50L3BsYXlsaXN0IjsKICAvLyAgICAgYnJlYWs7CiAgLy8gICBjYXNlIDU6CiAgLy8gICAgICIgL2NvbW1lbnQvdmlkZW8iOwogIC8vICAgICBicmVhazsKICAvLyAgIGRlZmF1bHQ6CiAgLy8gICAgIGJyZWFrOwogIC8vIH0KCn07"},{"version":3,"sources":["D:/HTML工程/项目/v3netease-main/src/Util/fltter.js"],"names":["playCount","num","toFixed","jobCount","realFormatSecond","second","secondType","parseInt","hours","Math","floor","mimute","slice","random","Start","end","debounce","fn","delay","timer","args","clearTimeout","setTimeout","apply","changeaudio","document","querySelector","style","bottom","initaudio","lyrics","lyric","lrc","arr","split","array","time","value","result","key","forEach","item","push","t","parseFloat","tocommnts","val"],"mappings":"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","sourcesContent":["/**\n *\n *\n * @param {Number} 传入一个数据\n * @return {Number}\n * @author Ayyyy <1738202298@qq.com>\n *\n */\nexport const playCount = (num) => {\n  if (num > 100000000) {\n    num = (num / 100000000).toFixed(2);\n    return `${num}亿`;\n  } else if (num > 10000) {\n    num = (num / 10000).toFixed(2);\n    return `${num} 万`;\n  } else {\n    return num;\n  }\n};\nexport const jobCount = (num) => {\n  if (num > 1000) {\n    num = (num / 1000).toFixed(1);\n    return `${num}k`;\n  } else {\n    return num;\n  }\n};\r\n\n/**\n * @param {number} second\n * @return {String}返回一个时间字符串\n * @author Ayyyy <1738202298@qq.com>\n */\n\nexport const realFormatSecond = (second) => {\n  const secondType = typeof second;\n  if (secondType === \"number\" || secondType === \"string\") {\n    second = parseInt(second);\n    const hours = Math.floor(second / 3600);\n    second = second - hours * 3600;\n    const mimute = Math.floor(second / 60);\n    second = second - mimute * 60;\n    return `${(\"0\" + mimute).slice(-2)}:${(\"0\" + second).slice(-2)}`;\n  } else {\n    return \"00:00\";\n  }\n};\n/**\n * @param {...number} Startend,\n * @return {number}返回一个随机数\n * @author Ayyyy <1738202298@qq.com>\n */\nexport const random = (Start, end) => {\n  const num = Math.floor(Math.random() * (Start - end) + end);\n  return num;\n};\n\n/**\n * @param  {Function} 要防抖的函数\n * @param  {Number} 延迟多秒执行\n */\nexport const debounce = (fn, delay) => {\n  var timer;\n  return function (...args) {\n    if (timer) {\n      clearTimeout(timer);\n    }\n    timer = setTimeout(() => {\n      fn.apply(this, args);\n    }, delay);\n  };\n};\n/**\n * @param  {*} 监听路由改变audio的位置\n *\n */\nexport const changeaudio = () => {\n  document.querySelector(\".audio\").style.bottom = \"50px\";\n};\nexport const initaudio = () => {\n  document.querySelector(\".audio\").style.bottom = 0;\n};\n\n/**\n * @param  {Object} 传入请求的歌曲对象数据进行抽离\n * @return  {Object} 延迟多秒执行\n */\nexport const lyrics = (lyric) => {\n  let lyrics = lyric.lrc.lyric;\n\n  let arr = lyrics.split(\"\\n\");\n  let array = [];\n  let time = \"\";\n  let value = \"\";\n  let result = [];\n  let key = [];\n  arr.forEach((item) => {\n    if (item != \"\") {\n      array.push(item);\n    }\n  });\n  arr = array;\n  arr.forEach((item) => {\n    time = item.split(\"]\")[0];\n    value = item.split(\"]\")[1];\n    var t = time.slice(1).split(\":\");\n    result.push([parseInt(t[0], 10) * 60 + parseFloat(t[1]), value]);\n    key.push(parseInt(t[0], 10) * 60 + parseFloat(t[1]));\n  });\n  return {\n    result,\n    key,\n  };\n};\n\n/**\n * @param  {String} 传入一个字符判断要请求那个接口\n * @return  {String} 返回一个接口地址字符串\n */\nexport const tocommnts = (val) => {\n  if (val === 0) {\n    return \"/comment/music\";\n  } else if (val === 2) {\n    return \"/comment/playlist\";\n  } else if (val === 5) {\n    return \"/comment/video\";\n  }\n  // switch (val) {\n  //   case 0:\n  //     \"/comment/music\";\n  //     break;\n  //   case 2:\n  //     return \"/comment/playlist\";\n\n  //     break;\n  //   case 5:\n  //     \" /comment/video\";\n  //     break;\n\n  //   default:\n  //     break;\n  // }\n};\n"]}]}
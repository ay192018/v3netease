var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
/*!
* @nutui/nutui v3.1.16 Sun Jan 30 2022 10:58:10 GMT+0800 (中国标准时间)
* (c) 2021 @jdf2e.
* Released under the MIT License.
*/
import { c as createComponent } from "./component.js";
import { h, reactive, computed, watch, toRefs, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, Fragment, renderList, createTextVNode, toDisplayString, renderSlot, createBlock, createCommentVNode } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.js";
var RenderColumn = {
  setup(props) {
    return () => h(`view`, {}, props.slots());
  },
  props: {
    slots: Object
  }
};
const component = (componentName2) => {
  return {
    components: {
      RenderColumn
    },
    props: {
      bordered: {
        type: Boolean,
        default: true
      },
      columns: {
        type: Array,
        default: () => {
          return [];
        }
      },
      data: {
        type: Object,
        default: () => {
          return {};
        }
      },
      summary: {
        type: Function,
        default: null
      },
      striped: {
        type: Boolean,
        default: false
      }
    },
    emits: ["sorter"],
    setup(props, { emit, slots }) {
      const state = reactive({
        curData: props.data
      });
      const classes = computed(() => {
        const prefixCls = componentName2;
        return {
          [prefixCls]: true
        };
      });
      const cellClasses = (item) => {
        return {
          "nut-table__main__head__tr--border": props.bordered,
          [`nut-table__main__head__tr--align${item.align ? item.align : ""}`]: true
        };
      };
      const getColumnItem = (value) => {
        return props.columns.filter((item) => item.key === value)[0];
      };
      const handleSorterClick = (item) => {
        if (item.sorter) {
          emit("sorter", item);
          state.curData = typeof item.sorter === "function" ? state.curData.sort(item.sorter) : item.sorter === "default" ? state.curData.sort() : state.curData;
        }
      };
      const sortDataItem = () => {
        return props.columns.map((value) => {
          return value.key;
        });
      };
      watch(() => props.data, (val) => {
        state.curData = val.slice();
      });
      return __spreadProps(__spreadValues({}, toRefs(state)), {
        classes,
        cellClasses,
        getColumnItem,
        handleSorterClick,
        sortDataItem
      });
    }
  };
};
const { componentName, create } = createComponent("table");
const _sfc_main = create(component(componentName));
const _hoisted_1 = { class: "nut-table__main__head" };
const _hoisted_2 = { class: "nut-table__main__head__tr" };
const _hoisted_3 = ["onClick"];
const _hoisted_4 = { class: "nut-table__main__body" };
const _hoisted_5 = {
  key: 0,
  class: "nut-table__summary"
};
const _hoisted_6 = ["innerHTML"];
const _hoisted_7 = {
  key: 1,
  class: "nut-table__nodata"
};
const _hoisted_8 = {
  key: 0,
  class: "nut-table__nodata__text"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_nut_icon = resolveComponent("nut-icon");
  const _component_RenderColumn = resolveComponent("RenderColumn");
  return openBlock(), createElementBlock("view", {
    class: normalizeClass(_ctx.classes)
  }, [
    createElementVNode("view", {
      class: normalizeClass(["nut-table__main", { "nut-table__main--striped": _ctx.striped }])
    }, [
      createElementVNode("view", _hoisted_1, [
        createElementVNode("view", _hoisted_2, [
          (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.columns, (item) => {
            return openBlock(), createElementBlock("span", {
              class: normalizeClass(["nut-table__main__head__tr__th", _ctx.cellClasses(item)]),
              key: item.key,
              onClick: ($event) => _ctx.handleSorterClick(item)
            }, [
              createTextVNode(toDisplayString(item.title) + " ", 1),
              renderSlot(_ctx.$slots, "icon"),
              !_ctx.$slots.icon && item.sorter ? (openBlock(), createBlock(_component_nut_icon, {
                key: 0,
                name: "down-arrow",
                size: "12px"
              })) : createCommentVNode("", true)
            ], 10, _hoisted_3);
          }), 128))
        ])
      ]),
      createElementVNode("view", _hoisted_4, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.curData, (item) => {
          return openBlock(), createElementBlock("view", {
            class: "nut-table__main__body__tr",
            key: item
          }, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.sortDataItem(), (value) => {
              return openBlock(), createElementBlock("span", {
                class: normalizeClass(["nut-table__main__body__tr__td", _ctx.cellClasses(_ctx.getColumnItem(value))]),
                key: value
              }, [
                createTextVNode(toDisplayString(typeof item[value] !== "function" ? item[value] : "") + " ", 1),
                typeof item[value] === "function" ? (openBlock(), createBlock(_component_RenderColumn, {
                  key: 0,
                  slots: item[value]
                }, null, 8, ["slots"])) : createCommentVNode("", true)
              ], 2);
            }), 128))
          ]);
        }), 128))
      ])
    ], 2),
    _ctx.summary ? (openBlock(), createElementBlock("view", _hoisted_5, [
      createElementVNode("span", {
        class: "nut-table__summary__text",
        innerHTML: _ctx.summary().value
      }, null, 8, _hoisted_6)
    ])) : createCommentVNode("", true),
    !_ctx.curData.length ? (openBlock(), createElementBlock("view", _hoisted_7, [
      createElementVNode("div", {
        class: normalizeClass(["nut-table__nodata", { "nut-table__nodata--border": _ctx.bordered }])
      }, [
        renderSlot(_ctx.$slots, "nodata"),
        !_ctx.$slots.nodata ? (openBlock(), createElementBlock("div", _hoisted_8, " \u6682\u65E0\u6570\u636E ")) : createCommentVNode("", true)
      ], 2)
    ])) : createCommentVNode("", true)
  ], 2);
}
var index = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { index as default };

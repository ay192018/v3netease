var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name2 in all)
    __defProp(target, name2, { get: all[name2], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
__export(exports, {
  default: () => stdin_default
});
var import_vue = __toModule(require("vue"));
var import_vue2 = __toModule(require("vue"));
var import_utils = __toModule(require("../utils"));
var import_utils2 = __toModule(require("./utils"));
var import_checkbox = __toModule(require("../checkbox"));
const [name, bem, t] = (0, import_utils.createNamespace)("coupon");
var stdin_default = (0, import_vue2.defineComponent)({
  name,
  props: {
    chosen: Boolean,
    coupon: (0, import_utils.makeRequiredProp)(Object),
    disabled: Boolean,
    currency: (0, import_utils.makeStringProp)("\xA5")
  },
  setup(props) {
    const validPeriod = (0, import_vue2.computed)(() => {
      const {
        startAt,
        endAt
      } = props.coupon;
      return `${(0, import_utils2.getDate)(startAt)} - ${(0, import_utils2.getDate)(endAt)}`;
    });
    const faceAmount = (0, import_vue2.computed)(() => {
      const {
        coupon,
        currency
      } = props;
      if (coupon.valueDesc) {
        return [coupon.valueDesc, (0, import_vue.createVNode)("span", null, [coupon.unitDesc || ""])];
      }
      if (coupon.denominations) {
        const denominations = (0, import_utils2.formatAmount)(coupon.denominations);
        return [(0, import_vue.createVNode)("span", null, [currency]), ` ${denominations}`];
      }
      if (coupon.discount) {
        return t("discount", (0, import_utils2.formatDiscount)(coupon.discount));
      }
      return "";
    });
    const conditionMessage = (0, import_vue2.computed)(() => {
      const condition = (0, import_utils2.formatAmount)(props.coupon.originCondition || 0);
      return condition === "0" ? t("unlimited") : t("condition", condition);
    });
    return () => {
      const {
        chosen,
        coupon,
        disabled
      } = props;
      const description = disabled && coupon.reason || coupon.description;
      return (0, import_vue.createVNode)("div", {
        "class": bem({
          disabled
        })
      }, [(0, import_vue.createVNode)("div", {
        "class": bem("content")
      }, [(0, import_vue.createVNode)("div", {
        "class": bem("head")
      }, [(0, import_vue.createVNode)("h2", {
        "class": bem("amount")
      }, [faceAmount.value]), (0, import_vue.createVNode)("p", {
        "class": bem("condition")
      }, [coupon.condition || conditionMessage.value])]), (0, import_vue.createVNode)("div", {
        "class": bem("body")
      }, [(0, import_vue.createVNode)("p", {
        "class": bem("name")
      }, [coupon.name]), (0, import_vue.createVNode)("p", {
        "class": bem("valid")
      }, [validPeriod.value]), !disabled && (0, import_vue.createVNode)(import_checkbox.Checkbox, {
        "class": bem("corner"),
        "modelValue": chosen
      }, null)])]), description && (0, import_vue.createVNode)("p", {
        "class": bem("description")
      }, [description])]);
    };
  }
});

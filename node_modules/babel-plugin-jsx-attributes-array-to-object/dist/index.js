"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const plugin = function (babel) {
    const t = babel.types;
    let attributes = [];
    return {
        name: 'babel-plugin-jsx-attributes-array-to-object',
        visitor: {
            JSXOpeningElement(jsxPath) {
                const { attributes: jsxAttributes } = jsxPath.node;
                for (const attribute of jsxAttributes) {
                    // style attribute is a expression
                    // ignore JSXSpreadAttribute
                    if (t.isJSXAttribute(attribute) && t.isJSXExpressionContainer(attribute.value)) {
                        if (attributes.includes(attribute.name.name)) {
                            // style is a array expression
                            if (t.isArrayExpression(attribute.value.expression)) {
                                // @ts-ignore
                                const mergeStyleExpression = t.callExpression(t.identifier('Object.assign'), [t.objectExpression([])].concat(attribute.value.expression.elements));
                                attribute.value = t.jSXExpressionContainer(mergeStyleExpression);
                            }
                        }
                    }
                }
            },
            Program: {
                enter(astPath, state) {
                    if (!state.opts)
                        return;
                    attributes = state.opts.attributes || [];
                },
            }
        },
    };
};
exports.default = plugin;
//# sourceMappingURL=index.js.map